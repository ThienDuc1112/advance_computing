namespace day2
{
  public static void Exercise4()
    {
        string command = "";
        do
        {
            command = Console.ReadLine();
            var cmd = command.Split();
            if (cmd.Length == 4)
            {
                Hospital inforPatient = new Hospital(cmd[0], cmd[1]+cmd[2], cmd[3]);
                Hospital.inforPatients.Add(inforPatient);
            }
            if (command == "Output" )
            {
                continue;
            }
            else if (cmd.Length == 1)
            {
                Hospital.FindByDepartment(command);
            }
            else if (cmd.Length == 2 && isNumber(cmd[1]))
            {
                Hospital.FindByRoom(cmd[0], int.Parse(cmd[1]));
            }
            else { Hospital.FindByDoctor(cmd[0] + cmd[1]); }
        } while (command != "End");
        Hospital.ListPatient();
    }



    internal class Hospital
    {
        public string Department { get; set; }
        public string Doctor { get; set; }
        public string Patient { get; set; }

        public static List<Hospital> inforPatients = new List<Hospital>();
        public static List<Hospital> NewList = new List<Hospital>();

        public Hospital(string department, string doctor, string patient)
        {
            Department = department;
            Doctor = doctor;
            Patient = patient;
        }
        public static void FindByDepartment(string Depart)
        {
            foreach(Hospital infor in inforPatients)
            {
                if(infor.Department == Depart)
                {
                    NewList.Add(infor);
                }
            }
        }

        public static void FindByRoom(string Depart,int room)
        {
            for(int i = 0; i <inforPatients.Count; i++)
            {
                if(inforPatients.ElementAt(i).Department== Depart)
                {
                    NewList.Add(inforPatients.ElementAt(i));
                }
            }
            for(int i = 0; i<NewList.Count; i++)
            {
                if (i > (3 * room) || i < (3 * room - 3))
                {
                    NewList.RemoveAt(i);
                }
            }
            NewList = NewList.OrderBy(x => x.Patient).ToList();
        }

        public static void FindByDoctor(string doctor)
        {
            foreach(Hospital infor in inforPatients)
            {
                if(doctor==infor.Doctor)
                {
                    NewList.Add(infor);
                }
            }
            NewList = NewList.OrderBy(x => x.Patient).ToList();
        }

        public static void ListPatient()
        {
            foreach(Hospital patient in NewList)
            {
                Console.WriteLine(patient.Patient);
            }
        }
    }
}
